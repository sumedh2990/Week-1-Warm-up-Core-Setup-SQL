-- ------------------------------------------------------------------------
-- SQL: Fetch Department-wise Employee Count
-- Goal: Count how many employees are present in each department
-- Tables: employees (employee_id, employee_name, department_id)
--         departments (department_id, department_name) [optional]
-- ------------------------------------------------------------------------

-- 1. Basic GROUP BY (most common & efficient)
-- Counts employees per department using department_id
SELECT department_id, COUNT(*) AS employee_count
FROM employees
GROUP BY department_id;

-- 2. Using JOIN to include department names
-- Joins employees with departments table to show department_name instead of ID
SELECT d.department_name, COUNT(e.employee_id) AS employee_count
FROM employees e
JOIN departments d ON e.department_id = d.department_id
GROUP BY d.department_name;

-- 3. Using a Subquery
-- Counts employees per department using correlated subquery
SELECT department_id,
       (SELECT COUNT(*)
        FROM employees e2
        WHERE e2.department_id = e1.department_id) AS employee_count
FROM employees e1
GROUP BY department_id;

-- 4. Using CTE (Common Table Expression)
-- Useful for complex queries; creates a temporary table dept_count
WITH dept_count AS (
    SELECT department_id, COUNT(*) AS employee_count
    FROM employees
    GROUP BY department_id
)
SELECT * FROM dept_count;

-- 5. Using Window Function (COUNT OVER)
-- Returns each employee along with total employees in their department
SELECT DISTINCT department_id,
       COUNT(employee_id) OVER (PARTITION BY department_id) AS employee_count
FROM employees;

-- 6. Include departments with zero employees
-- LEFT JOIN with departments table ensures even empty departments are listed
SELECT d.department_name,
       COUNT(e.employee_id) AS employee_count
FROM departments d
LEFT JOIN employees e ON d.department_id = e.department_id
GROUP BY d.department_name;
